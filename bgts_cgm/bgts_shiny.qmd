---
title: "Diabetes Project Tracking"
author: "Julian Collins - Medicines Value & Access"
format:
  dashboard:
    embed-resources: TRUE
server: shiny
---

```{r}
#| context: setup
#| include: false

# libraries
library(shiny)
library(plotly)
library(tidyverse)
library(scales)
library(zoo)
library(DT)

```

```{r}
#| context: data
#| include: true


# macbook
bgts_cgm_geog_icb <- readRDS("/Users/juliancollins/Repos/ShinyPractice/bgts_cgm/bgts_cgm_geog_icb.Rds")

# windows
#bgts_cgm_geog_icb <- readRDS("bgts_cgm_geog_icb.Rds")


bgts_cgm_geog_icb$year_month2 <- as.yearmon(as.character(bgts_cgm_geog_icb$year_month3), "%Y%m")

```

# BGTS

```{r}
#| panel: sidebar
#| title: "Options"

# select icb
selectizeInput("icb",
                "Select ICB:",
                choices = bgts_cgm_geog_icb$icb,
                selected = c("Black Country", "Birmingham And Solihull"),
                multiple = T)

# select chemcical
selectizeInput("bnf",
                "Select BNF:",
                choices = bgts_cgm_geog_icb$bnf_chemical_substance,
                selected = "Glucose blood testing reagents",
                multiple = F)

# filter nic
sliderInput("nic",
            "NIC range:",
            min = 1, max = 7.5e5,
            value = c(1.5e5, 4e5),
            round = 10)

```



```{r}
#| panel: fill

plotlyOutput('line_nic')

plotlyOutput('line_items')


#dataTableOutput('table_nic')

```




```{r}
#| context: server

 bgts_reactive <- reactive({
        bgts_cgm_geog_icb |> 
        filter(year_month2 <= "Jul 2022") |> 
        group_by(icb, bnf_chemical_substance, year_month2) |> 
        summarise(net_ingredient_cost = sum(net_ingredient_cost),
                  items = sum(items)) |> 
        filter(net_ingredient_cost >= input$nic[1] & net_ingredient_cost <= input$nic[2]) |> 
        filter(bnf_chemical_substance == input$bnf) |> 
        filter(icb %in% input$icb) |> 
        #filter(net_ingredient_cost2 >= input$nic) |> 
        ungroup() 
 })

 output$line_nic <- renderPlotly({
      #
      
        # 
      validate(
        need(input$icb, "Please select one or more ICB areas")
      )
     ggplotly(
        bgts_reactive() |> 
        ggplot(aes(x = year_month2, y = net_ingredient_cost, group = icb, colour = icb
                   )) +
        geom_line(linewidth = 1) +
        geom_point(aes(text = paste0(icb, "\n",
                                     year_month2, "\n",
                                     bnf_chemical_substance, "\n",
                                     "NIC: Â£", prettyNum(net_ingredient_cost, big.mark = ","))), 
                   shape = 21, fill = 'white', size = 2) +
        theme_minimal() +
        scale_y_continuous(labels = comma, limits = c(0, NA)) +
        labs(x = "", y = "Net Ingredient Cost"),
        tooltip = 'text', dynamicTicks = T) |> 
     layout(legend = list(title = "", orientation = 'h', xanchor = 'center', x = 0.5))
     #layout(showlegend = F)
        
    })



output$line_items <- renderPlotly({
        # 
      validate(
        need(input$icb, "Please select one or more ICB areas")
      )
     ggplotly(
        bgts_reactive() |> 
        ggplot(aes(x = year_month2, y = items, group = icb, colour = icb
                   )) +
        geom_line(linewidth = 1) +
        geom_point(aes(text = paste0(icb, "\n",
                                     year_month2, "\n",
                                     bnf_chemical_substance, "\n",
                                     "Items: ", prettyNum(items, big.mark = ","))), 
                   shape = 21, fill = 'white', size = 2) +
        theme_minimal() +
        scale_y_continuous(labels = comma, limits = c(0, NA)) +
        labs(x = "", y = "Number of Items"),
        tooltip = 'text', dynamicTicks = T) |> 
        layout(legend = list(title = "", orientation = 'h', xanchor = 'center', x = 0.5))
     #layout(showlegend = F, xaxis = list(autorange = F, range = c(2021.25, 2022.583)))
     #layout(showlegend = F)
        
    })


```

# CGM


# Biosimilars

